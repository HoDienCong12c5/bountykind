import { Container } from '@pixi/display';
import { ObservableQuaternion } from "./transform/observable-quaternion";
import { Transform3D } from "./transform/transform";
import { ObservablePoint3D } from "./transform/observable-point";
/**
 * A container represents a collection of 3D objects.
 */
export declare class Container3D extends Container {
    transform: Transform3D;
    set position(value: ObservablePoint3D);
    get position(): ObservablePoint3D;
    set scale(value: ObservablePoint3D);
    get scale(): ObservablePoint3D;
    set rotationQuaternion(value: ObservableQuaternion);
    /** The quaternion rotation of the object. */
    get rotationQuaternion(): ObservableQuaternion;
    /** The position of the object on the z axis relative to the local
     * coordinates of the parent. */
    get z(): number;
    set z(value: number);
    get localTransform(): import(".").Matrix4;
    get worldTransform(): import(".").Matrix4;
}
